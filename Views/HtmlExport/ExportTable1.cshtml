@model EPPlus.WebSampleMvc.NetCore.Models.HtmlExport.ExportTable1Model
@{
    ViewData["Title"] = "Html export";
    Layout = "_Layout";
}
<style type="text/css">
    @Html.Raw(Model.Css)
</style>
<div class="row">
    <div class="col">
        <nav aria-label="breadcrumb">
            <ol class="breadcrumb">
                <li class="breadcrumb-item"><a href="/">Home</a></li>
                <li class="breadcrumb-item"><a href="/HtmlExport">Html export</a></li>
                <li class="breadcrumb-item active" aria-current="page">Export table 1</li>
            </ol>
        </nav>
    </div>
</div>
<div class="row">
    <div class="col text-center">
        <h1 class="display-4">Html export</h1>
    </div>
</div>
<div class="row justify-content-center">
    <div class="col-sm-12 col-md-5 bg-light p-3 m-2">
        <p>Html and CSS export of the built in tables/table styles in Excel</p>
        <p>Use the dropdowns to change table style and theme, then click the Reload button. This is the only roundtrip done back to EPPlus. Change the appearance of the table by checking/unchecking the checkboxes (this is done by adding removing css-classes from the table and, for DataTables.js, javascript).</p>
    </div>
    <div class="col-sm-12 col-md-5 bg-light p-3 m-2">
        <p>All CSS classes needed to style the table is exported from EPPlus and based on Excels table styles and themes. You can use the dev tools of your favorite browser to see how the classes are applied to the table.</p>
    </div>
</div>
<form asp-action="ExportTable1" method="post">
    <div class="row justify-content-center">
        <div class="col-sm-12 col-md-5 m-2 p-3 border border-secondary rounded shadow">

            @Html.AntiForgeryToken()
            <div class="form-group">
                <label>Theme</label>
                @Html.DropDownListFor(x => x.Theme, Model.AllThemes, new { @class = "form-control" })
            </div>
            <div class="form-group">
                <label>Table style</label>
                @Html.DropDownListFor(x => x.TableStyle, Model.AllBuiltInTableStyles, new { @class = "form-control" })
            </div>
            <div class="form-check">
                @Html.CheckBoxFor(x => x.ShowFirstColumn, new { @class = "form-control-check", id = "chkShowFirstColumn" })
                <label class="form-check-label">Show first column</label>
            </div>
            <div class="form-check">
                @Html.CheckBoxFor(x => x.ShowLastColumn, new { @class = "form-control-check", id = "chkShowLastColumn" })
                <label class="form-check-label">Show last column</label>
            </div>
            <div class="form-check">
                @Html.CheckBoxFor(x => x.ShowColumnStripes, new { @class = "form-control-check", id = "chkShowColumnStripes" })
                <label class="form-check-label">Show column stripes</label>
            </div>
            <div class="form-check">
                @Html.CheckBoxFor(x => x.ShowRowsStripes, new { @class = "form-control-check", id = "chkShowRowStripes" })
                <label class="form-check-label">Show row stripes</label>
            </div>
            <div class="form-group mt-2">
                <button type="submit" class="btn btn-primary">Reload</button>
            </div>
        </div>
        <div class="col-sm-12 col-md-5 m-2 ml-md-3 p-3 border border-secondary rounded shadow">
            <p>The checkboxes below demonstrates that you can use the css from EPPlus with css from other frameworks</p>
            <div class="form-check">
                @Html.CheckBoxFor(x => x.AddBootstrapClasses, new { @class = "form-control-check", id = "chkAddBootstrapClasses" })
                <label class="form-check-label">Add Bootstrap 4 table classes</label>
            </div>
            <div class="form-check">
                @Html.CheckBoxFor(x => x.AddDataTablesJs, new { @class = "form-control-check", id = "chkAddDataTablesJs" })
                <label class="form-check-label">Add DataTables.js</label>
            </div>
        </div>
    </div>
    <hr />
    <div class="row">
        <div class="col">
            <label>Css classes on the table element</label>
            <p class="bg-light p-2 rounded" style="font-family: Courier New, Courier, monospace" id="table-class-info"></p>
        </div>
    </div>
    <hr />
    <div class="row mt-3">
        <div class="col" id="colTable">
            @Html.Raw(Model.Html)
        </div>
    </div>
</form>
<script type_="text/javascript">
    /*
     * Updates the p element that displays the classes currently applied to the table.
     */ 
    function updateTableClassInfo() {
        let classes = document.getElementsByClassName("epplus-table")[0].className;
        document.getElementById("table-class-info").innerHTML = classes;
    }
    /*
    * Removes some attributes that DataTable.js has set on the table and don't remove at destroy().
    */
    function postDestroyDataTable() {
        jQuery(".epplus-table thead tr th").each(function (i, elem) {
            jQuery(".epplus-table").removeClass("no-footer");
            jQuery(elem).removeAttr("style").removeAttr("class").removeAttr("tabindex").removeAttr("aria-controls").removeAttr("aria-sort").removeAttr("aria-label").removeAttr("colspan").removeAttr("rowspan").removeAttr("tabindex");
        });
    }
    document.addEventListener("DOMContentLoaded", function () {

        var table = document.getElementsByClassName("epplus-table")[0];

        // checkbox handler for show first column
        var firstColCheckbox = document.getElementById('chkShowFirstColumn');
        var firstColumnClass = "epplus-tablestyle-@Model.TableStyle?.ToLower()-first-column";
        firstColCheckbox.addEventListener("change", function () {
            if (firstColCheckbox.checked) {
                table.classList.add(firstColumnClass);
            } else {
                table.classList.remove(firstColumnClass);
            }
            updateTableClassInfo();
        }, false);

        // checkbox handler for show last column
        var lastColCheckbox = document.getElementById('chkShowLastColumn');
        var lastColumnClass = "epplus-tablestyle-@Model.TableStyle?.ToLower()-last-column";
        lastColCheckbox.addEventListener("change", function () {
            if (lastColCheckbox.checked) {
                table.classList.add(lastColumnClass);
            } else {
                table.classList.remove(lastColumnClass);
            }
            updateTableClassInfo();
        }, false);

        // checkbox handler for show column stripes
        var colStripesCheckbox = document.getElementById('chkShowColumnStripes');
        var colStripesClass = "epplus-tablestyle-@Model.TableStyle?.ToLower()-column-stripes";
        colStripesCheckbox.addEventListener("change", function () {
            if (colStripesCheckbox.checked) {
                table.classList.add(colStripesClass);
            } else {
                table.classList.remove(colStripesClass);
            }
            updateTableClassInfo();
        }, false);

        // checkbox handler for show row stripes
        var rowStripesCheckbox = document.getElementById('chkShowRowStripes');
        var rowStripesClass = "epplus-tablestyle-@Model.TableStyle?.ToLower()-row-stripes";
        rowStripesCheckbox.addEventListener("change", function () {
            if (rowStripesCheckbox.checked) {
                table.classList.add(rowStripesClass);
            } else {
                table.classList.remove(rowStripesClass);
            }
            updateTableClassInfo();
        }, false);

        // checkbox handler for adding/removing bootstrap classes
        var addBootstrapClassesCheckbox = document.getElementById("chkAddBootstrapClasses");
        addBootstrapClassesCheckbox.addEventListener("change", function () {
            if (addBootstrapClassesCheckbox.checked) {
                document.getElementById("colTable").classList.add("table-responsive");
                table.classList.add("table");
                table.classList.add("table-borderless");
            }
            else {
                document.getElementById("colTable").classList.remove("table-responsive");
                table.classList.remove("table");
                table.classList.remove("table-borderless");
            }
            updateTableClassInfo();
        }, false);

        // checkbox handler for adding/removing DataTables.js
        var addDataTablesJsCheckbox = document.getElementById("chkAddDataTablesJs");
        addDataTablesJsCheckbox.addEventListener("change", function () {
            if (addDataTablesJsCheckbox.checked) {
                // data tables requires jquery
                jQuery('.epplus-table').first().DataTable();
            }
            else {
                jQuery('.epplus-table').first().DataTable().destroy();
                // datatables.js leaves this class after destroy(), so removing it this way
                postDestroyDataTable();
            }
            updateTableClassInfo();
        }, false);

        jQuery.noConflict();
        updateTableClassInfo();
    });
</script>
@if (Model.AddBootstrapClasses)
{
    <script type="text/javascript">
        document.addEventListener("DOMContentLoaded", function () {
            var table = document.getElementsByClassName("epplus-table")[0];
            document.getElementById("colTable").classList.add("table-responsive");
            table.classList.add("table");
            table.classList.add("table-borderless");
            updateTableClassInfo();
        });
    </script>
}
@if (Model.AddDataTablesJs)
{
    <script type="text/javascript">
        document.addEventListener("DOMContentLoaded", function () {
            jQuery.noConflict();
            jQuery('.epplus-table').first().DataTable();
            updateTableClassInfo();
        });
    </script>
}